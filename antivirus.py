from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import *
from PyQt5.QtGui import QPixmap

app = QApplication([])


class Windows(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–§–µ–π–∫ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å")
        self.setMinimumSize(400, 275)
        self.setMaximumSize(400,275)

        self.nozp = 1
        
        #–ª–æ–≥–∏–Ω
        self.mailedit = QLineEdit()
        self.name = self.mailedit.text()
        self.mailedit.setMinimumSize(150, 25)
        self.mailedit.setMaximumSize(150, 25)
        self.passwordedit = QLineEdit()
        self.passwordedit.setEchoMode(QLineEdit.Password)
        self.passwordedit.setMinimumSize(150, 25)
        self.passwordedit.setMaximumSize(150, 25)
        self.passwordsafety = QLineEdit()
        self.passwordsafety.setEchoMode(QLineEdit.Password)
        self.passwordsafety.setMinimumSize(150, 25)
        self.passwordsafety.setMaximumSize(150, 25)
        self.signinbtn = QPushButton("–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
        self.signinbtn.clicked.connect(self.login)
        self.signinbtn.setMinimumSize(150, 25)
        self.signinbtn.setMaximumSize(150, 25)
        self.emaillbl = QLabel("–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É:")
        self.passlbl = QLabel("–£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
        self.secpasslbl = QLabel("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
        self.message = QLabel()

        self.layoutV = QVBoxLayout()
        self.layoutLogin = QHBoxLayout()

        self.layoutV.addWidget(self.emaillbl)
        self.layoutV.addWidget(self.mailedit)
        self.layoutV.addWidget(self.passlbl)
        self.layoutV.addWidget(self.passwordedit)
        self.layoutV.addWidget(self.secpasslbl)
        self.layoutV.addWidget(self.passwordsafety)
        self.layoutV.addWidget(self.signinbtn)
        self.layoutV.addWidget(self.message)

        self.layoutLogin.addLayout(self.layoutV)

        #–≥–ª–∞–≤–Ω–∞—è
        self.frontbtn = QPushButton("–ì–ª–∞–≤–Ω–∞—è")
        self.frontbtn.clicked.connect(self.main)
        self.frontbtn.setMinimumSize(150, 35)
        self.frontbtn.setMaximumSize(150, 35)
        self.securbtn = QPushButton("–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
        self.securbtn.clicked.connect(self.secure)
        self.securbtn.setMinimumSize(150, 35)
        self.securbtn.setMaximumSize(150, 35)
        self.workbtn = QPushButton("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
        self.workbtn.clicked.connect(self.productivity)
        self.workbtn.setMinimumSize(150, 35)
        self.workbtn.setMaximumSize(150, 35)
        self.privbtn = QPushButton("–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å")
        self.privbtn.clicked.connect(self.privacy)
        self.privbtn.setMinimumSize(150, 35)
        self.privbtn.setMaximumSize(150, 35)
        self.profilebtn = QPushButton("–ü—Ä–æ—Ñ–∏–ª—å")
        self.profilebtn.clicked.connect(self.profile)
        self.profilebtn.setMinimumSize(150, 35)
        self.profilebtn.setMaximumSize(150, 35)
        self.setbtn = QPushButton("‚öô")
        self.setbtn.clicked.connect(self.settings)
        self.setbtn.setMinimumSize(35, 35)
        self.setbtn.setMaximumSize(35, 35)

        self.frontbtn.hide()
        self.securbtn.hide()
        self.workbtn.hide()
        self.privbtn.hide()
        self.profilebtn.hide()
        self.setbtn.hide()

        self.layoutVMenu = QVBoxLayout()
        self.layoutMain = QHBoxLayout()

        self.layoutVMenu.addWidget(self.frontbtn, alignment= Qt.AlignTop)
        self.layoutVMenu.addWidget(self.securbtn, alignment= Qt.AlignTop)
        self.layoutVMenu.addWidget(self.workbtn, alignment= Qt.AlignTop)
        self.layoutVMenu.addWidget(self.privbtn, alignment= Qt.AlignTop)
        self.layoutVMenu.addWidget(self.profilebtn, alignment= Qt.AlignTop)
        self.layoutVMenu.addWidget(self.setbtn, alignment= Qt.AlignBottom)

        self.frontlbl = QLabel("–ì–ª–∞–≤–Ω–∞—è")
        self.frontlbl.hide()
        self.piclbl = QLabel("—Ç—É—Ç")
        self.memlbl = QLabel("–í—ã –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π")
        self.checkbtn = QPushButton("üîç\n–±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
        self.checkbtn.clicked.connect(self.secure)
        self.historylbl = QLabel("–ò—Å—Ç–æ—Ä–∏—è")
        self.historylist = QListWidget()
        self.historylist.setMaximumHeight(90)
        self.safepix = QPixmap("safe.jfif")
        self.notsafepix = QPixmap("notsafe.jfif")

        self.piclbl.setPixmap(self.safepix)

        self.piclbl.hide()
        self.memlbl.hide()
        self.checkbtn.hide()
        self.historylbl.hide()
        self.historylist.hide()

        self.defH = QHBoxLayout()
        self.defV = QVBoxLayout()

        self.defV.addWidget(self.frontlbl, alignment= Qt.AlignTop)
        self.defH.addWidget(self.piclbl, alignment= Qt.AlignCenter)
        self.defH.addWidget(self.memlbl, alignment= Qt.AlignCenter)
        self.defV.addLayout(self.defH)
        self.defV.addWidget(self.checkbtn)
        self.defV.addWidget(self.historylbl, alignment= Qt.AlignBottom)
        self.defV.addWidget(self.historylist, alignment= Qt.AlignBottom)

        #–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        self.seclbl = QLabel()
        self.secpix = QPixmap("freerobux.jpg")
        self.seclbl.setPixmap(self.secpix)
        self.seclbl.hide()
        self.fastcheckbtn = QPushButton("–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
        self.fastlbl = QLabel("–û–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 5 –º–∏–Ω—É—Ç")
        self.allcheckbtn = QPushButton("–ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
        self.alllbl = QLabel("–û–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏ –º–æ–∂–µ—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å —Ä–∞–±–æ—Ç—É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞")
        self.fastcheckbtn.setMinimumHeight(45)
        self.allcheckbtn.setMinimumHeight(45)
        self.fastcheckbtn.hide()
        self.allcheckbtn.hide()
        self.fastlbl.hide()
        self.alllbl.hide()

        self.defV.addWidget(self.seclbl, alignment= Qt.AlignTop)
        self.defV.addWidget(self.fastlbl)
        self.defV.addWidget(self.fastcheckbtn)
        self.defV.addWidget(self.alllbl)
        self.defV.addWidget(self.allcheckbtn)

        #–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        self.dupplacebtn = QPushButton("–î—É–ø–ª–∏–∫–∞—Ç—ã —Ñ–∞–π–ª–æ–≤")
        self.bigfilesbtn = QPushButton("–ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã")
        self.nouseappsbtn = QPushButton("–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        self.trashcan = QPixmap("trashcan.jfif")
        self.trashlbl = QLabel()
        self.trashlbl.setPixmap(self.trashcan)
        self.trashlbl.hide()
        self.dupplacebtn.hide()
        self.bigfilesbtn.hide()
        self.nouseappsbtn.hide()

        self.prodH = QHBoxLayout()

        self.prodH.addWidget(self.dupplacebtn)
        self.prodH.addWidget(self.bigfilesbtn)

        #–ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å
        self.privlbl = QLabel()
        self.funnyface = QPixmap("funnymask.jfif")
        self.privlbl.setPixmap(self.funnyface)
        self.privlbl.hide()
        self.vpnbtn = QPushButton("VPN —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (–Ω–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ)")
        self.nodatabtn = QPushButton("–ü–æ–∏—Å–∫ —É—Ç–µ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
        self.vpnbtn.hide()
        self.nodatabtn.hide()

        self.defV.addWidget(self.privlbl, alignment= Qt.AlignTop)
        self.defV.addWidget(self.vpnbtn, alignment= Qt.AlignCenter)
        self.defV.addWidget(self.nodatabtn, alignment= Qt.AlignCenter)

        #–∞–∫–∫–∞—É–Ω—Ç
        self.proflbl = QLabel()
        self.profpix = QPixmap("menface.jfif")
        self.proflbl.setPixmap(self.profpix)
        self.proflbl.hide()
        self.profilelbl = QLabel("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, " + self.name)
        self.logoutbtn = QPushButton("–í—ã–π—Ç–∏ (–∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)")
        self.infolbl = QLabel("–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞\n–∏—Å—Ç–µ–∫–∞–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ –¥–Ω–µ–π –≤–ø–µ—Ä–µ–¥")
        self.profilelbl.hide()
        self.logoutbtn.hide()
        self.infolbl.hide()

        self.profH = QHBoxLayout()

        self.defV.addWidget(self.proflbl, alignment= Qt.AlignTop)
        self.profH.addWidget(self.profilelbl, alignment= Qt.AlignCenter)
        
        self.defV.addLayout(self.profH)
        self.defV.addWidget(self.logoutbtn)
        self.defV.addWidget(self.infolbl)

        #–Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.virus = QCheckBox("–í–∏—Ä—É—Å—ã")
        self.virus.clicked.connect(self.flag)
        self.idc = QCheckBox("–Ø –Ω–µ –Ω–µ—Å—É –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –≤–∞—à–µ\n –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ —Ñ–∞–π–ª—ã –∏ —Ç. –¥.")
        self.idc.setChecked(True)
        self.idc.setEnabled(False)
        self.idc.hide()
        self.virus.hide()
        self.nozplbl = QPushButton("–£—Ä–µ–∑–∞—Ç—å –ö–æ—Å—Ç—è–Ω—É –∑–∞—Ä–ø–ª–∞—Ç—É –Ω–∞ "+ str(self.nozp)+" —Ä—É–±–ª–µ–π")
        self.nozplbl.clicked.connect(self.minuszp)
        self.nozplbl.hide()
        self.switchthemes = QComboBox()
        self.switchthemes.addItem("–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞")
        self.switchthemes.addItem("–ú–µ–Ω–µ–µ —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞")
        self.switchthemes.addItem("–¢–µ–º–Ω—ã–π –¢—ë–º–∞")
        self.switchthemes.addItem("–ß–µ—Ä–Ω—ã–π –¢—ë–º–∞")
        self.switchthemes.addItem("–û—Ç—Å—ã–ª–∫–∞ –Ω–∞ –æ–¥–Ω–æ –≤–∏–¥–µ–æ –≥–¥–µ —Ç–∞–∫ –∏ –±—ã–ª–æ –ª–æ–ª")
        self.switchthemes.hide()
        self.switchthemes.currentTextChanged.connect(self.change_style)
        self.activatevirus = QPushButton("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Ä—É—Å—ã")
        self.activatevirus.hide()

        self.defV.addWidget(self.switchthemes, alignment= Qt.AlignTop)
        self.defV.addWidget(self.virus, alignment= Qt.AlignTop)
        self.defV.addWidget(self.idc, alignment= Qt.AlignCenter)
        self.defV.addWidget(self.nozplbl, alignment= Qt.AlignCenter)
        self.defV.addWidget(self.activatevirus, alignment= Qt.AlignBottom)

        self.layoutMain.addLayout(self.layoutVMenu)
        self.layoutMain.addLayout(self.defV)

        self.defV.addWidget(self.trashlbl, alignment= Qt.AlignCenter)
        self.defV.addLayout(self.prodH)
        self.defV.addWidget(self.nouseappsbtn, alignment= Qt.AlignCenter)

        self.layoutMain.addLayout(self.layoutLogin)

        self.setLayout(self.layoutMain)
        self.setStyleSheet('''QWidget {
    background-color: #f5f5f5;
    color: #333333;
    font-family: 'Segoe UI', Arial, sans-serif;
    font-size: 12px;
    border: none;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ */
QMainWindow {
    background-color: #ffffff;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ */
QLabel#title {
    font-size: 18px;
    font-weight: bold;
    color: #2c3e50;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
QPushButton {
    background-color: #3498db;
    color: white;
    border: 1px solid #2980b9;
    border-radius: 4px;
    padding: 5px 10px;
    min-width: 80px;
}

QPushButton:hover {
    background-color: #2980b9;
}

QPushButton:pressed {
    background-color: #1d6fa5;
}

QPushButton:disabled {
    background-color: #bdc3c7;
    border-color: #95a5a6;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */
QPushButton.scan-button {
    background-color: #2ecc71;
    border-color: #27ae60;
}

QPushButton.scan-button:hover {
    background-color: #27ae60;
}

QPushButton.scan-button:pressed {
    background-color: #219653;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞/—É–¥–∞–ª–µ–Ω–∏—è */
QPushButton.danger-button {
    background-color: #e74c3c;
    border-color: #c0392b;
}

QPushButton.danger-button:hover {
    background-color: #c0392b;
}

QPushButton.danger-button:pressed {
    background-color: #a93226;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QLineEdit */
QLineEdit {
    background-color: white;
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    padding: 5px;
}

QLineEdit:focus {
    border: 1px solid #3498db;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QComboBox */
QComboBox {
    background-color: white;
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    padding: 5px;
    min-width: 100px;
}

QComboBox:hover {
    border: 1px solid #3498db;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 20px;
    border-left-width: 1px;
    border-left-color: #bdc3c7;
    border-left-style: solid;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QTabWidget */
QTabWidget::pane {
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    margin-top: 5px;
}

QTabBar::tab {
    background-color: #ecf0f1;
    border: 1px solid #bdc3c7;
    border-bottom: none;
    padding: 5px 15px;
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
}

QTabBar::tab:selected {
    background-color: #ffffff;
    border-bottom-color: #ffffff;
    margin-bottom: -1px;
}

QTabBar::tab:hover {
    background-color: #d6eaf8;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QProgressBar */
QProgressBar {
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    text-align: center;
    background-color: white;
}

QProgressBar::chunk {
    background-color: #2ecc71;
    width: 10px;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QListWidget –∏ QTreeWidget */
QListWidget, QTreeWidget {
    background-color: white;
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    alternate-background-color: #f8f9fa;
}

QListWidget::item:hover, QTreeWidget::item:hover {
    background-color: #e3f2fd;
}

QListWidget::item:selected, QTreeWidget::item:selected {
    background-color: #3498db;
    color: white;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QScrollBar */
QScrollBar:vertical {
    border: none;
    background: #ecf0f1;
    width: 10px;
    margin: 0px 0px 0px 0px;
}

QScrollBar::handle:vertical {
    background: #bdc3c7;
    min-height: 20px;
    border-radius: 5px;
}

QScrollBar::handle:vertical:hover {
    background: #95a5a6;
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
    background: none;
    height: 0px;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–±–∞—Ä–∞ */
QStatusBar {
    background-color: #ecf0f1;
    border-top: 1px solid #bdc3c7;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
QGroupBox {
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    margin-top: 10px;
    padding-top: 15px;
    font-weight: bold;
}

QGroupBox::title {
    subcontrol-origin: margin;
    left: 10px;
    padding: 0 5px;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤ –∏ —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫ */
QCheckBox, QRadioButton {
    spacing: 5px;
}

QCheckBox::indicator, QRadioButton::indicator {
    width: 16px;
    height: 16px;
}

QCheckBox::indicator:unchecked {
    image: url(:/icons/checkbox_unchecked.png);
}

QCheckBox::indicator:checked {
    image: url(:/icons/checkbox_checked.png);
}

QRadioButton::indicator:unchecked {
    image: url(:/icons/radiobutton_unchecked.png);
}

QRadioButton::indicator:checked {
    image: url(:/icons/radiobutton_checked.png);
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∏–∫–æ–Ω–æ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è */
QLabel.status-icon {
    qproperty-alignment: AlignCenter;
}

QLabel.status-safe {
    color: #2ecc71;
}

QLabel.status-warning {
    color: #f39c12;
}

QLabel.status-danger {
    color: #e74c3c;
}''')

        self.show()
    def login(self):
        self.name = self.mailedit.text()
        self.password = self.passwordedit.text()
        self.nums = '1234567890'
        self.letters = 'qwertyuiopasdfghjklzxcvbnm'
        self.bigletters = 'QWERTYUIOPASDFGHJKLZXCVBNM'
        self.specialchars = '!@#$%^&*()'
        self.loging = False
        if self.password == self.passwordsafety.text() and len(self.password) != 0:
            self.message.setText("")
            for char in self.password:
                if (char in self.nums) or (char in self.letters) or (char in self.bigletters) or (char in self.specialchars):
                    self.loging = True
                else:
                    self.loging = False
                    self.message.setText("–Ω–µ–¥–æ–ø—É—Å–∏–º—ã–π —Å–∏–º–≤–æ–ª: " + char)
                    break
                    
        else:
            self.message.setText("–û—à–∏–±–∫–∞ –≤ –ø–∞—Ä–æ–ª—è—Ö")
        if self.loging:
            self.profilelbl.setText("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, " + self.mailedit.text())
            self.mailedit.hide()
            self.passwordedit.hide()
            self.passwordsafety.hide()
            self.signinbtn.hide()
            self.emaillbl.hide()
            self.passlbl.hide()
            self.secpasslbl.hide()
            self.message.hide()
            self.frontlbl.show()
            self.frontbtn.show()
            self.securbtn.show()
            self.workbtn.show()
            self.privbtn.show()
            self.profilebtn.show()
            self.setbtn.show()
            self.piclbl.show()
            self.memlbl.show()
            self.checkbtn.show()
            self.historylbl.show()
            self.historylist.show()

    def main(self):
        self.historylist.addItem("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É " + self.frontbtn.text())
        self.frontlbl.setText("–ì–ª–∞–≤–Ω–∞—è")
        self.piclbl.show()
        self.memlbl.show()
        self.checkbtn.show()
        self.historylbl.show()
        self.historylist.show()
        self.fastcheckbtn.hide()
        self.allcheckbtn.hide()
        self.fastlbl.hide()
        self.alllbl.hide()
        self.dupplacebtn.hide()
        self.bigfilesbtn.hide()
        self.nouseappsbtn.hide()
        self.vpnbtn.hide()
        self.nodatabtn.hide()
        self.profilelbl.hide()
        self.logoutbtn.hide()
        self.infolbl.hide()
        self.virus.hide()
        self.switchthemes.hide()
        self.activatevirus.hide()
        self.idc.hide()
        self.nozplbl.hide()
        self.trashlbl.hide()
        self.privlbl.hide()
        self.proflbl.hide()
        self.seclbl.hide()
    def secure(self):
        self.historylist.addItem("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É " + self.securbtn.text())
        self.frontlbl.setText("–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
        self.piclbl.hide()
        self.memlbl.hide()
        self.checkbtn.hide()
        self.historylbl.hide()
        self.historylist.hide()
        self.fastcheckbtn.show()
        self.allcheckbtn.show()
        self.fastlbl.show()
        self.alllbl.show()
        self.dupplacebtn.hide()
        self.bigfilesbtn.hide()
        self.nouseappsbtn.hide()
        self.vpnbtn.hide()
        self.nodatabtn.hide()
        self.profilelbl.hide()
        self.logoutbtn.hide()
        self.infolbl.hide()
        self.virus.hide()
        self.switchthemes.hide()
        self.activatevirus.hide()
        self.idc.hide()
        self.nozplbl.hide()
        self.trashlbl.hide()
        self.privlbl.hide()
        self.proflbl.hide()
        self.seclbl.show()
    def productivity(self):
        self.historylist.addItem("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É " + self.workbtn.text())
        self.frontlbl.setText("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
        self.dupplacebtn.show()
        self.bigfilesbtn.show()
        self.nouseappsbtn.show()
        self.fastcheckbtn.hide()
        self.allcheckbtn.hide()
        self.fastlbl.hide()
        self.alllbl.hide()
        self.piclbl.hide()
        self.memlbl.hide()
        self.checkbtn.hide()
        self.historylbl.hide()
        self.historylist.hide()
        self.vpnbtn.hide()
        self.nodatabtn.hide()
        self.profilelbl.hide()
        self.logoutbtn.hide()
        self.infolbl.hide()
        self.virus.hide()
        self.switchthemes.hide()
        self.activatevirus.hide()
        self.idc.hide()
        self.nozplbl.hide()
        self.trashlbl.show()
        self.privlbl.hide()
        self.proflbl.hide()
        self.seclbl.hide()
    def privacy(self):
        self.historylist.addItem("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É " + self.privbtn.text())
        self.frontlbl.setText("–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å")
        self.vpnbtn.show()
        self.nodatabtn.show()
        self.dupplacebtn.hide()
        self.bigfilesbtn.hide()
        self.nouseappsbtn.hide()
        self.fastcheckbtn.hide()
        self.allcheckbtn.hide()
        self.fastlbl.hide()
        self.alllbl.hide()
        self.piclbl.hide()
        self.memlbl.hide()
        self.checkbtn.hide()
        self.historylbl.hide()
        self.historylist.hide()
        self.profilelbl.hide()
        self.logoutbtn.hide()
        self.infolbl.hide()
        self.virus.hide()
        self.switchthemes.hide()
        self.activatevirus.hide()
        self.idc.hide()
        self.nozplbl.hide()
        self.trashlbl.hide()
        self.privlbl.show()
        self.proflbl.hide()
        self.seclbl.hide()
    def profile(self):
        self.historylist.addItem("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É " + self.profilebtn.text())
        self.frontlbl.setText("–ü—Ä–æ—Ñ–∏–ª—å")
        self.profilelbl.show()
        self.logoutbtn.show()
        self.infolbl.show()
        self.vpnbtn.hide()
        self.nodatabtn.hide()
        self.dupplacebtn.hide()
        self.bigfilesbtn.hide()
        self.nouseappsbtn.hide()
        self.fastcheckbtn.hide()
        self.allcheckbtn.hide()
        self.fastlbl.hide()
        self.alllbl.hide()
        self.piclbl.hide()
        self.memlbl.hide()
        self.checkbtn.hide()
        self.historylbl.hide()
        self.historylist.hide()
        self.virus.hide()
        self.switchthemes.hide()
        self.activatevirus.hide()
        self.idc.hide()
        self.nozplbl.hide()
        self.trashlbl.hide()
        self.privlbl.hide()
        self.proflbl.show()
        self.seclbl.hide()
    def settings(self):
        self.historylist.addItem("–¢—ã –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É " + self.setbtn.text())
        self.frontlbl.setText("–ù–∞ —Å—Ç—Ä–æ–π–∫–∏")
        self.profilelbl.hide()
        self.logoutbtn.hide()
        self.infolbl.hide()
        self.vpnbtn.hide()
        self.nodatabtn.hide()
        self.dupplacebtn.hide()
        self.bigfilesbtn.hide()
        self.nouseappsbtn.hide()
        self.fastcheckbtn.hide()
        self.allcheckbtn.hide()
        self.fastlbl.hide()
        self.alllbl.hide()
        self.piclbl.hide()
        self.memlbl.hide()
        self.checkbtn.hide()
        self.historylbl.hide()
        self.historylist.hide()
        self.virus.show()
        self.switchthemes.show()
        self.idc.show()
        self.nozplbl.show()
        self.trashlbl.hide()
        self.privlbl.hide()
        self.proflbl.hide()
        self.seclbl.hide()
    def flag(self):
        if self.virus.isChecked():
            self.activatevirus.show()
        else: self.activatevirus.hide()
    def minuszp(self):
        self.nozp *= 2
        self.nozplbl.setText("–£—Ä–µ–∑–∞—Ç—å –ö–æ—Å—Ç—è–Ω—É –∑–∞—Ä–ø–ª–∞—Ç—É –Ω–∞ "+str(self.nozp)+" —Ä—É–±–ª–µ–π")
    def change_style(self):
        if self.switchthemes.currentIndex() == 0:
            self.setStyleSheet("")
            self.setStyleSheet('''QWidget {
    background-color: #f5f5f5;
    color: #333333;
    font-family: 'Segoe UI', Arial, sans-serif;
    font-size: 12px;
    border: none;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ */
QMainWindow {
    background-color: #ffffff;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ */
QLabel#title {
    font-size: 18px;
    font-weight: bold;
    color: #2c3e50;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ */
QPushButton {
    background-color: #3498db;
    color: white;
    border: 1px solid #2980b9;
    border-radius: 4px;
    padding: 5px 10px;
    min-width: 80px;
}

QPushButton:hover {
    background-color: #2980b9;
}

QPushButton:pressed {
    background-color: #1d6fa5;
}

QPushButton:disabled {
    background-color: #bdc3c7;
    border-color: #95a5a6;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */
QPushButton.scan-button {
    background-color: #2ecc71;
    border-color: #27ae60;
}

QPushButton.scan-button:hover {
    background-color: #27ae60;
}

QPushButton.scan-button:pressed {
    background-color: #219653;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞/—É–¥–∞–ª–µ–Ω–∏—è */
QPushButton.danger-button {
    background-color: #e74c3c;
    border-color: #c0392b;
}

QPushButton.danger-button:hover {
    background-color: #c0392b;
}

QPushButton.danger-button:pressed {
    background-color: #a93226;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QLineEdit */
QLineEdit {
    background-color: white;
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    padding: 5px;
}

QLineEdit:focus {
    border: 1px solid #3498db;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QComboBox */
QComboBox {
    background-color: white;
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    padding: 5px;
    min-width: 100px;
}

QComboBox:hover {
    border: 1px solid #3498db;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 20px;
    border-left-width: 1px;
    border-left-color: #bdc3c7;
    border-left-style: solid;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QTabWidget */
QTabWidget::pane {
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    margin-top: 5px;
}

QTabBar::tab {
    background-color: #ecf0f1;
    border: 1px solid #bdc3c7;
    border-bottom: none;
    padding: 5px 15px;
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
}

QTabBar::tab:selected {
    background-color: #ffffff;
    border-bottom-color: #ffffff;
    margin-bottom: -1px;
}

QTabBar::tab:hover {
    background-color: #d6eaf8;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QProgressBar */
QProgressBar {
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    text-align: center;
    background-color: white;
}

QProgressBar::chunk {
    background-color: #2ecc71;
    width: 10px;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QListWidget –∏ QTreeWidget */
QListWidget, QTreeWidget {
    background-color: white;
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    alternate-background-color: #f8f9fa;
}

QListWidget::item:hover, QTreeWidget::item:hover {
    background-color: #e3f2fd;
}

QListWidget::item:selected, QTreeWidget::item:selected {
    background-color: #3498db;
    color: white;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è QScrollBar */
QScrollBar:vertical {
    border: none;
    background: #ecf0f1;
    width: 10px;
    margin: 0px 0px 0px 0px;
}

QScrollBar::handle:vertical {
    background: #bdc3c7;
    min-height: 20px;
    border-radius: 5px;
}

QScrollBar::handle:vertical:hover {
    background: #95a5a6;
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
    background: none;
    height: 0px;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–±–∞—Ä–∞ */
QStatusBar {
    background-color: #ecf0f1;
    border-top: 1px solid #bdc3c7;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
QGroupBox {
    border: 1px solid #bdc3c7;
    border-radius: 3px;
    margin-top: 10px;
    padding-top: 15px;
    font-weight: bold;
}

QGroupBox::title {
    subcontrol-origin: margin;
    left: 10px;
    padding: 0 5px;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤ –∏ —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫ */
QCheckBox, QRadioButton {
    spacing: 5px;
}

QCheckBox::indicator, QRadioButton::indicator {
    width: 16px;
    height: 16px;
}

QCheckBox::indicator:unchecked {
    image: url(:/icons/checkbox_unchecked.png);
}

QCheckBox::indicator:checked {
    image: url(:/icons/checkbox_checked.png);
}

QRadioButton::indicator:unchecked {
    image: url(:/icons/radiobutton_unchecked.png);
}

QRadioButton::indicator:checked {
    image: url(:/icons/radiobutton_checked.png);
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∏–∫–æ–Ω–æ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è */
QLabel.status-icon {
    qproperty-alignment: AlignCenter;
}

QLabel.status-safe {
    color: #2ecc71;
}

QLabel.status-warning {
    color: #f39c12;
}

QLabel.status-danger {
    color: #e74c3c;
}''')


        


root = Windows()
app.exec_()
    